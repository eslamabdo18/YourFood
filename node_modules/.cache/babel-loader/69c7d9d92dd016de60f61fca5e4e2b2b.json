{"ast":null,"code":"var _jsxFileName = \"/Volumes/ESLAM/Web/foodMeals/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport useHttp from \"../../hooks/send-http\";\nimport AddNewMeal from \"./AddNewMeal\";\nimport loading from \"../../assets/ATB3o.gif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const {\n    isLoading,\n    error,\n    sendRequest: uploadData\n  } = useHttp();\n\n  const insertNewItem = meal => {\n    uploadData({\n      url: 'https://try1-238c7-default-rtdb.firebaseio.com/meals.json'\n    }, () => console.log('dn'));\n    const dummy = [...meals];\n    dummy.push(meal);\n    setMeals(dummy);\n  }; // const uploadData = useCallback(async (meal) => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await fetch(\n  //       \"https://try1-238c7-default-rtdb.firebaseio.com/meals.json\",\n  //       {\n  //         method: \"POST\",\n  //         body: JSON.stringify(meal),\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //         },\n  //       }\n  //     );\n  //     if (!response.ok) {\n  //       throw new Error(\"Something went wrong!\");\n  //     }\n  //   } catch (err) {\n  //     setError(err.message || \"Something went wrong!\");\n  //   }\n  //   console.log(dummy);\n  //   setIsLoading(false);\n  // }, [meals]);\n\n\n  const fetchData = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    const loadedMeals = [];\n\n    try {\n      const res = await fetch(\"https://try1-238c7-default-rtdb.firebaseio.com/meals.json\");\n\n      if (!res.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await res.json();\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: data[key].id,\n          name: data[key].name,\n          price: data[key].price,\n          description: data[key].description\n        });\n      }\n\n      setMeals(loadedMeals);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData, setMeals]);\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    price: meal.price,\n    desc: meal.description\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [!isLoading ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"loading\",\n        src: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 46\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddNewMeal, {\n      uploadData: insertNewItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"0Ttvui/19Jj2arcASf+WvEZRhxY=\", false, function () {\n  return [useHttp];\n});\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Volumes/ESLAM/Web/foodMeals/src/components/Meals/AvailableMeals.js"],"names":["React","useState","useEffect","useCallback","classes","Card","MealItem","useHttp","AddNewMeal","loading","AvailableMeals","meals","setMeals","isLoading","error","sendRequest","uploadData","insertNewItem","meal","url","console","log","dummy","push","fetchData","setIsLoading","setError","loadedMeals","res","fetch","ok","Error","data","json","key","id","name","price","description","err","message","mealsList","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport useHttp from \"../../hooks/send-http\";\nimport AddNewMeal from \"./AddNewMeal\";\nimport loading from \"../../assets/ATB3o.gif\";\n\nconst AvailableMeals = () => {\n\n  const [meals, setMeals] = useState([]);\n  const {isLoading,error,sendRequest:uploadData} = useHttp();\n\n  const insertNewItem = (meal) =>{\n    uploadData({url:'https://try1-238c7-default-rtdb.firebaseio.com/meals.json'},()=>console.log('dn'));\n    const dummy  = [...meals];\n    dummy.push(meal);\n    setMeals(dummy);\n  }\n  // const uploadData = useCallback(async (meal) => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await fetch(\n  //       \"https://try1-238c7-default-rtdb.firebaseio.com/meals.json\",\n  //       {\n  //         method: \"POST\",\n  //         body: JSON.stringify(meal),\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //         },\n  //       }\n  //     );\n  //     if (!response.ok) {\n  //       throw new Error(\"Something went wrong!\");\n  //     }\n  //   } catch (err) {\n  //     setError(err.message || \"Something went wrong!\");\n  //   }\n   \n  //   console.log(dummy);\n  //   setIsLoading(false);\n  // }, [meals]);\n\n  const fetchData = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    const loadedMeals = [];\n    try {\n      const res = await fetch(\n        \"https://try1-238c7-default-rtdb.firebaseio.com/meals.json\"\n      );\n      if (!res.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const data = await res.json();\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: data[key].id,\n          name: data[key].name,\n          price: data[key].price,\n          description: data[key].description,\n        });\n      }\n      setMeals(loadedMeals);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData,setMeals]);\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      id={meal.id}\n      key={meal.id}\n      name={meal.name}\n      price={meal.price}\n      desc={meal.description}\n    />\n  ));\n  return (\n    <section className={classes.meals}>\n      <Card>\n        {!isLoading ? <ul>{mealsList}</ul> : <img alt=\"loading\" src={loading}/>}\n        {error && <p>{error}</p>}\n      </Card>\n      <AddNewMeal uploadData={insertNewItem} />\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}