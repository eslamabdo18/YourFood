{"ast":null,"code":"var _jsxFileName = \"/Volumes/ESLAM/Web/foodMeals/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_MEALS = [{\n  id: \"m1\",\n  name: \"Sushi\",\n  description: \"Finest fish and veggies\",\n  price: 22.99\n}, {\n  id: \"m2\",\n  name: \"Schnitzel\",\n  description: \"A german specialty!\",\n  price: 16.5\n}, {\n  id: \"m3\",\n  name: \"Barbecue Burger\",\n  description: \"American, raw, meaty\",\n  price: 12.99\n}, {\n  id: \"m4\",\n  name: \"Green Bowl\",\n  description: \"Healthy...and green...\",\n  price: 18.99\n}];\n\nconst AvailableMeals = meal => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const uploadData = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://try1-238c7-default-rtdb.firebaseio.com/meals.json\", {\n        method: \"POST\",\n        body: JSON.stringify(meal),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  const mealsList = DUMMY_MEALS.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    price: meal.price,\n    desc: meal.description\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: !isLoading ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 22\n      }, this) : 'Loading'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadData,\n      children: \" upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Volumes/ESLAM/Web/foodMeals/src/components/Meals/AvailableMeals.js"],"names":["React","useState","useEffect","useCallback","classes","Card","MealItem","DUMMY_MEALS","id","name","description","price","AvailableMeals","meal","isLoading","setIsLoading","error","setError","uploadData","response","fetch","method","body","JSON","stringify","headers","ok","Error","err","message","mealsList","map","meals"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AACA,MAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,WAAW,EAAE,yBAHf;AAIEC,EAAAA,KAAK,EAAE;AAJT,CADkB,EAOlB;AACEH,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,WAAW,EAAE,qBAHf;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAPkB,EAalB;AACEH,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,iBAFR;AAGEC,EAAAA,WAAW,EAAE,sBAHf;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAbkB,EAmBlB;AACEH,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,WAAW,EAAE,wBAHf;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAnBkB,CAApB;;AA0BA,MAAMC,cAAc,GAAIC,IAAD,IAAU;AAAA;;AAC/B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMiB,UAAU,GAAG,YAAY;AAC7BH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAC1B,2DAD0B,EAE1B;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf,CAFR;AAGEY,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHX,OAF0B,CAA5B;;AAUA,UAAI,CAACN,QAAQ,CAACO,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;AACF,KAdD,CAcE,OAAMC,GAAN,EAAW;AACXX,MAAAA,QAAQ,CAACW,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDd,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GArBD;;AAuBA,QAAMe,SAAS,GAAGvB,WAAW,CAACwB,GAAZ,CAAiBlB,IAAD,iBAChC,QAAC,QAAD;AACE,IAAA,EAAE,EAAEA,IAAI,CAACL,EADX;AAGE,IAAA,IAAI,EAAEK,IAAI,CAACJ,IAHb;AAIE,IAAA,KAAK,EAAEI,IAAI,CAACF,KAJd;AAKE,IAAA,IAAI,EAAEE,IAAI,CAACH;AALb,KAEOG,IAAI,CAACL,EAFZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAUA,sBACE;AAAS,IAAA,SAAS,EAAEJ,OAAO,CAAC4B,KAA5B;AAAA,4BACE,QAAC,IAAD;AAAA,gBACG,CAAClB,SAAD,gBAAY;AAAA,kBAAKgB;AAAL;AAAA;AAAA;AAAA;AAAA,cAAZ,GAAkC;AADrC;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAQ,MAAA,OAAO,EAAEZ,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA7CD;;GAAMN,c;;KAAAA,c;AA+CN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nconst DUMMY_MEALS = [\n  {\n    id: \"m1\",\n    name: \"Sushi\",\n    description: \"Finest fish and veggies\",\n    price: 22.99,\n  },\n  {\n    id: \"m2\",\n    name: \"Schnitzel\",\n    description: \"A german specialty!\",\n    price: 16.5,\n  },\n  {\n    id: \"m3\",\n    name: \"Barbecue Burger\",\n    description: \"American, raw, meaty\",\n    price: 12.99,\n  },\n  {\n    id: \"m4\",\n    name: \"Green Bowl\",\n    description: \"Healthy...and green...\",\n    price: 18.99,\n  },\n];\nconst AvailableMeals = (meal) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const uploadData = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://try1-238c7-default-rtdb.firebaseio.com/meals.json\",\n        {\n          method: \"POST\",\n          body: JSON.stringify(meal),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n    } catch(err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false)\n  };\n\n  const mealsList = DUMMY_MEALS.map((meal) => (\n    <MealItem\n      id={meal.id}\n      key={meal.id}\n      name={meal.name}\n      price={meal.price}\n      desc={meal.description}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        {!isLoading ?<ul>{mealsList}</ul>: 'Loading'}\n      </Card>\n      <button onClick={uploadData}> upload</button>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}