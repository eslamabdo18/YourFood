{"ast":null,"code":"var _jsxFileName = \"/Volumes/ESLAM/Web/foodMeals/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const updatedItems = state.items.concat(action.item);\n    const isItemExsit = state.items.findIndex(item => item.id === action.item.id);\n\n    if (isItemExsit) {\n      const totalUpdatedAmount = state.totalAmount + action.item.price * action.item.amount;\n    } else {\n      const totalUpdatedAmount = state.totalAmount + action.item.price * action.item.amount;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: totalUpdatedAmount\n    };\n  }\n\n  if (action.type === \"REMOVE_ITEM\") {}\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD_ITEM\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE_ITEM\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Volumes/ESLAM/Web/foodMeals/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","isItemExsit","findIndex","id","totalUpdatedAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9B,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AAEA,UAAMC,WAAW,GAAGN,KAAK,CAACH,KAAN,CAAYU,SAAZ,CACjBF,IAAD,IAAUA,IAAI,CAACG,EAAL,KAAYP,MAAM,CAACI,IAAP,CAAYG,EADhB,CAApB;;AAGA,QAAIF,WAAJ,EAAiB;AACf,YAAMG,kBAAkB,GACtBT,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYK,KAAZ,GAAoBT,MAAM,CAACI,IAAP,CAAYM,MADtD;AAED,KAHD,MAGO;AACL,YAAMF,kBAAkB,GACtBT,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYK,KAAZ,GAAoBT,MAAM,CAACI,IAAP,CAAYM,MADtD;AAED;;AAED,WAAO;AACLd,MAAAA,KAAK,EAAEM,YADF;AAELL,MAAAA,WAAW,EAAEW;AAFR,KAAP;AAID;;AACD,MAAIR,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC,CAClC;;AACD,SAAON,gBAAP;AACD,CAvBD;;AAyBA,MAAMgB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCrB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;AAKA,QAAMoB,oBAAoB,GAAIX,IAAD,IAAU;AACrCU,IAAAA,kBAAkB,CAAC;AAAEb,MAAAA,IAAI,EAAE,UAAR;AAAoBG,MAAAA,IAAI,EAAEA;AAA1B,KAAD,CAAlB;AACD,GAFD;;AAGA,QAAMY,yBAAyB,GAAIT,EAAD,IAAQ;AACxCO,IAAAA,kBAAkB,CAAC;AAAEb,MAAAA,IAAI,EAAE,aAAR;AAAuBM,MAAAA,EAAE,EAAEA;AAA3B,KAAD,CAAlB;AACD,GAFD;;AAGA,QAAMU,WAAW,GAAG;AAClBrB,IAAAA,KAAK,EAAEiB,SAAS,CAACjB,KADC;AAElBC,IAAAA,WAAW,EAAEgB,SAAS,CAAChB,WAFL;AAGlBqB,IAAAA,OAAO,EAAEH,oBAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvBD;;GAAMT,Y;;KAAAA,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const updatedItems = state.items.concat(action.item);\n\n    const isItemExsit = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    if (isItemExsit) {\n      const totalUpdatedAmount =\n        state.totalAmount + action.item.price * action.item.amount;\n    } else {\n      const totalUpdatedAmount =\n        state.totalAmount + action.item.price * action.item.amount;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: totalUpdatedAmount,\n    };\n  }\n  if (action.type === \"REMOVE_ITEM\") {\n  }\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ type: \"ADD_ITEM\", item: item });\n  };\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: \"REMOVE_ITEM\", id: id });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}