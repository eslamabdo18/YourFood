{"ast":null,"code":"var _jsxFileName = \"/Volumes/ESLAM/Web/foodMeals/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport AddNewMeal from \"./AddNewMeal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [meals, setMeals] = useState([]);\n\n  const uploadData = async meal => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://try1-238c7-default-rtdb.firebaseio.com/meals.json\", {\n        method: \"POST\",\n        body: JSON.stringify(meal),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  };\n\n  const fetchData = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    const loadedMeals = [];\n\n    try {\n      const res = await fetch(\"https://try1-238c7-default-rtdb.firebaseio.com/meals.json\");\n\n      if (!res.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await res.json();\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: data[key].id,\n          name: data[key].name,\n          price: data[key].price,\n          description: data[key].description\n        });\n      }\n\n      setMeals(loadedMeals);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData, uploadData]);\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    price: meal.price,\n    desc: meal.description\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [!isLoading ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 23\n      }, this) : \"Loading\", error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddNewMeal, {\n      uploadData: uploadData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"aiYR70rCjIR8VrXjpfQmHYzSm0Y=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Volumes/ESLAM/Web/foodMeals/src/components/Meals/AvailableMeals.js"],"names":["React","useState","useEffect","useCallback","classes","Card","MealItem","AddNewMeal","AvailableMeals","isLoading","setIsLoading","error","setError","meals","setMeals","uploadData","meal","response","fetch","method","body","JSON","stringify","headers","ok","Error","err","message","fetchData","loadedMeals","res","data","json","key","push","id","name","price","description","mealsList","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMc,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACjCN,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMK,QAAQ,GAAG,MAAMC,KAAK,CAC1B,2DAD0B,EAE1B;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFR;AAGEO,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHX,OAF0B,CAA5B;;AAUA,UAAI,CAACN,QAAQ,CAACO,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;AACF,KAdD,CAcE,OAAOC,GAAP,EAAY;AACZd,MAAAA,QAAQ,CAACc,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDjB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GArBD;;AAuBA,QAAMkB,SAAS,GAAGzB,WAAW,CAAC,YAAY;AACxCO,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,UAAMiB,WAAW,GAAG,EAApB;;AACA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMZ,KAAK,CACrB,2DADqB,CAAvB;;AAGA,UAAI,CAACY,GAAG,CAACN,EAAT,EAAa;AACX,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD,YAAMM,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;;AAEA,WAAK,MAAMC,GAAX,IAAkBF,IAAlB,EAAwB;AACtBF,QAAAA,WAAW,CAACK,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEJ,IAAI,CAACE,GAAD,CAAJ,CAAUE,EADC;AAEfC,UAAAA,IAAI,EAAEL,IAAI,CAACE,GAAD,CAAJ,CAAUG,IAFD;AAGfC,UAAAA,KAAK,EAAEN,IAAI,CAACE,GAAD,CAAJ,CAAUI,KAHF;AAIfC,UAAAA,WAAW,EAAEP,IAAI,CAACE,GAAD,CAAJ,CAAUK;AAJR,SAAjB;AAMD;;AACDxB,MAAAA,QAAQ,CAACe,WAAD,CAAR;AACD,KAlBD,CAkBE,OAAOH,GAAP,EAAY;AACZd,MAAAA,QAAQ,CAACc,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDjB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GA1B4B,EA0B1B,EA1B0B,CAA7B;AA4BAR,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACA,SAAD,EAAWb,UAAX,CAFM,CAAT;AAGA,QAAMwB,SAAS,GAAG1B,KAAK,CAAC2B,GAAN,CAAWxB,IAAD,iBAC1B,QAAC,QAAD;AACE,IAAA,EAAE,EAAEA,IAAI,CAACmB,EADX;AAGE,IAAA,IAAI,EAAEnB,IAAI,CAACoB,IAHb;AAIE,IAAA,KAAK,EAAEpB,IAAI,CAACqB,KAJd;AAKE,IAAA,IAAI,EAAErB,IAAI,CAACsB;AALb,KAEOtB,IAAI,CAACmB,EAFZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AASA,sBACE;AAAS,IAAA,SAAS,EAAE/B,OAAO,CAACS,KAA5B;AAAA,4BACE,QAAC,IAAD;AAAA,iBACG,CAACJ,SAAD,gBAAa;AAAA,kBAAK8B;AAAL;AAAA;AAAA;AAAA;AAAA,cAAb,GAAoC,SADvC,EAEG5B,KAAK,iBAAI;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,UAAD;AAAY,MAAA,UAAU,EAAII;AAA1B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA5ED;;GAAMP,c;;KAAAA,c;AA8EN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport AddNewMeal from \"./AddNewMeal\";\n\nconst AvailableMeals = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [meals, setMeals] = useState([]);\n  const uploadData = async (meal) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://try1-238c7-default-rtdb.firebaseio.com/meals.json\",\n        {\n          method: \"POST\",\n          body: JSON.stringify(meal),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n\n  const fetchData = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    const loadedMeals = [];\n    try {\n      const res = await fetch(\n        \"https://try1-238c7-default-rtdb.firebaseio.com/meals.json\"\n      );\n      if (!res.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const data = await res.json();\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: data[key].id,\n          name: data[key].name,\n          price: data[key].price,\n          description: data[key].description,\n        });\n      }\n      setMeals(loadedMeals);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData,uploadData]);\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      id={meal.id}\n      key={meal.id}\n      name={meal.name}\n      price={meal.price}\n      desc={meal.description}\n    />\n  ));\n  return (\n    <section className={classes.meals}>\n      <Card>\n        {!isLoading ? <ul>{mealsList}</ul> : \"Loading\"}\n        {error && <p>{error}</p>}\n      </Card>\n      <AddNewMeal uploadData = {uploadData} />\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}