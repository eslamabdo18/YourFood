{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\n\nconst useHttp = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async (req, applyData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(req.url, {\n        method: req.method ? req.method : \"GET\",\n        body: req.body ? JSON.stringify(req.body) : null,\n        headers: req.headers ? req.headers : {}\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\n\nexport default useHttp;","map":{"version":3,"sources":["/Volumes/ESLAM/Web/foodMeals/src/hooks/send-http.js"],"names":["useState","useCallback","useHttp","isLoading","setIsLoading","error","setError","sendRequest","req","applyData","response","fetch","url","method","body","JSON","stringify","headers","ok","Error","data","json","err","message"],"mappings":";;AAAA,SAAUA,QAAV,EAAoBC,WAApB,QAAuC,OAAvC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMO,WAAW,GAAGN,WAAW,CAAC,OAAOO,GAAP,EAAYC,SAAZ,KAA0B;AACxDL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAACI,GAAL,EAAU;AACpCC,QAAAA,MAAM,EAAEL,GAAG,CAACK,MAAJ,GAAaL,GAAG,CAACK,MAAjB,GAA0B,KADE;AAEpCC,QAAAA,IAAI,EAAEN,GAAG,CAACM,IAAJ,GAAWC,IAAI,CAACC,SAAL,CAAeR,GAAG,CAACM,IAAnB,CAAX,GAAsC,IAFR;AAGpCG,QAAAA,OAAO,EAAET,GAAG,CAACS,OAAJ,GAAcT,GAAG,CAACS,OAAlB,GAA4B;AAHD,OAAV,CAA5B;;AAKA,UAAI,CAACP,QAAQ,CAACQ,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;AACAZ,MAAAA,SAAS,CAACW,IAAD,CAAT;AACD,KAXD,CAWE,OAAOE,GAAP,EAAY;AACZhB,MAAAA,QAAQ,CAACgB,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDnB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAlB8B,EAkB5B,EAlB4B,CAA/B;AAoBA,SAAM;AACJD,IAAAA,SADI;AAEJE,IAAAA,KAFI;AAGJE,IAAAA;AAHI,GAAN;AAKD,CA7BD;;GAAML,O;;AA+BN,eAAeA,OAAf","sourcesContent":["import  { useState, useCallback } from \"react\";\n\nconst useHttp = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = useCallback(async (req, applyData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(req.url, {\n        method: req.method ? req.method : \"GET\",\n        body: req.body ? JSON.stringify(req.body) : null,\n        headers: req.headers ? req.headers : {},\n      });\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, []);\n\n  return{\n    isLoading,\n    error,\n    sendRequest\n  }\n};\n\nexport default useHttp;\n"]},"metadata":{},"sourceType":"module"}